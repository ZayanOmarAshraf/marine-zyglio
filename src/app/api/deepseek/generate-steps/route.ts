import { NextResponse } from 'next/server';
import OpenAI from 'openai'; // Using OpenAI SDK for DeepSeek

const apiKey = process.env.DEEPSEEK_API_KEY;
if (!apiKey) {
  console.error('DEEPSEEK_API_KEY is not defined in environment variables.');
}

const deepseek = new OpenAI({
  baseURL: 'https://api.deepseek.com/v1', // Make sure this is the correct DeepSeek API base URL
  apiKey: apiKey,
});

export async function POST(request: Request) {
  try {
    console.log('DeepSeek generate-steps API route called.');
    console.log('DeepSeek API key available:', !!apiKey);

    const { transcript } = await request.json();

    if (!transcript) {
      return NextResponse.json(
        { error: 'Transcript is required' },
        { status: 400 }
      );
    }

    const prompt = `Analyze the following medical or technical procedure transcript and break it down into clear, sequential steps. Each step should be concise and descriptive.

Transcript:
${transcript}

Format each step as "Title: Description". The title should be a brief label for the step, and the description should explain what needs to be done.

Example Format:
Patient Positioning: Place the patient in the supine position on the operating table.
Surgical Site Sterilization: Apply antiseptic solution to the designated surgical area using circular motions.
Initial Incision: Make a 5cm longitudinal incision along the pre-marked line.

Provide ONLY the steps, one per line. Do not include any introductory text, concluding remarks, or markdown formatting like bullet points or dashes. Each line of your response should be a single step in the "Title: Description" format.
`;

    console.log('Sending request to DeepSeek for step generation...');
    const completion = await deepseek.chat.completions.create({
      model: "deepseek-chat", // Use the appropriate DeepSeek model
      messages: [
        {
          role: "system",
          content: "You are an expert in medical and technical procedure documentation. Your task is to extract distinct steps from a transcript and format them as 'Title: Description'."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      temperature: 0.5, // Adjust for desired creativity/determinism
      max_tokens: 1500 // Adjust as needed
    });

    const generatedContent = completion.choices[0]?.message?.content || '';
    console.log('Raw response from DeepSeek (steps):', generatedContent);

    const steps = generatedContent
      .split('\n')
      .map(step => step.trim())
      .filter(step => step && step.includes(':')) // Basic validation for "Title: Description"
      .map(step => step.replace(/^[-â€¢*]\s*/, '').trim()); // Remove list markers

    if (steps.length === 0) {
      console.error('No valid steps extracted from DeepSeek response:', generatedContent);
      // Fallback if no steps are generated
       const fallbackSteps = transcript
          .split(/[.!?]+/)
          .map(sentence => sentence.trim())
          .filter(sentence => sentence.length > 10)
          .map((sentence, index) => `Step ${index + 1}: ${sentence}`);
        
        if (fallbackSteps.length > 0) {
          console.log('Using fallback steps mechanism for step generation, count:', fallbackSteps.length);
          return NextResponse.json({ steps: fallbackSteps });
        }
      return NextResponse.json(
        { error: 'No valid steps were generated by DeepSeek' },
        { status: 500 }
      );
    }

    console.log('Successfully generated steps:', steps);
    return NextResponse.json({ steps });

  } catch (error) {
    console.error('Error in DeepSeek generate-steps API:', error);
    const errorMessage = error instanceof Error ? error.message : 'Unknown DeepSeek API error';
    return NextResponse.json(
      { error: 'Failed to generate steps with DeepSeek', details: errorMessage },
      { status: 500 }
    );
  }
} 